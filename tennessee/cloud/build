#!/bin/bash -e

function main() {
  cd "$(dirname "$0")" || { err "unable to change directory"; return 2; }

  local missingSetting
  missingSetting=false
  [[ "$TENANT" ]] || { err "Missing TENANT"; missingSetting=true; }
  [[ "$CLOUD" ]] || { err "Missing CLOUD"; missingSetting=true; }
  [[ "$GROUP" ]] || { err "Missing GROUP"; missingSetting=true; }
  "$missingSetting" && { err "Did you update and source settings?"; return 3; }

  echo "#!/bin/bash -e" > create
  echo "apoctl api import -n /$TENANT/$CLOUD/$GROUP --file $PWD/prisma/secops.yaml" >> create
  chmod +x create

  [[ "$CLOUD_NTP" ]] && {
    # shellcheck disable=SC2086
    update prisma/ntp.yaml $CLOUD_NTP
    echo "apoctl api import -n /$TENANT/$CLOUD/$GROUP --file $PWD/prisma/ntp.yaml" >> create
  }

  [[ "$CLOUD_DNS" ]] && {
    # shellcheck disable=SC2086
    update prisma/dns.yaml $CLOUD_DNS
    echo "apoctl api import -n /$TENANT/$CLOUD/$GROUP --file $PWD/prisma/dns.yaml" >> create
  }

  [[ "$META_DATA_API" ]] && {
    # shellcheck disable=SC2086
    update prisma/metadataapi.yaml $META_DATA_API
    echo "apoctl api import -n /$TENANT/$CLOUD/$GROUP --file $PWD/prisma/metadataapi.yaml" >> create
  }

  return 0
}

function update() {
  local node file
  file=$1
  clean "$file"
  shift
  # shellcheck disable=SC2068
  for node in $@; do
    yq -i e ".data.externalnetworks[0].entries += [\"$node\"]" "$file"
  done
}

function clean() {
  local file
  file=$1
  yq -i e "del(.data.externalnetworks[0].entries)" "$file"
}

function err() { echo "$@" 1>&2; }

main "$@"
